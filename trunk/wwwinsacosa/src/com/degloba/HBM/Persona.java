package com.degloba.HBM;

// Generated 13/12/2011 09:53:56 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import com.google.appengine.api.datastore.Key;

/**
 * Persona generated by hbm2java
 */
@Entity
@Table(name = "persona", schema = "dbo", catalog = "INSACO")
public class Persona implements java.io.Serializable {

	private int idPersona;
	private Set<PersonesAdreces> personesAdreceses = new HashSet<PersonesAdreces>(
			0);
	
    @Id
    @GeneratedValue
    private Key key;

	public Persona() {
	}

	public Persona(int idPersona) {
		this.idPersona = idPersona;
	}

	public Persona(int idPersona, Set<PersonesAdreces> personesAdreceses) {
		this.idPersona = idPersona;
		this.personesAdreceses = personesAdreceses;
	}
	
    // Accessors for the fields. JPA doesn't use these, but your application does.    
    public Key getKey() {        
    	return key;    
    }
    
    public void setKey(Key key) {        
    	this.key = key;    
    }

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY) 
	@Column(name = "id_persona", unique = true, nullable = false)
	public int getIdPersona() {
		return this.idPersona;
	}

	public void setIdPersona(int idPersona) {
		this.idPersona = idPersona;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "persona")
	public Set<PersonesAdreces> getPersonesAdreceses() {
		return this.personesAdreceses;
	}

	public void setPersonesAdreceses(Set<PersonesAdreces> personesAdreceses) {
		this.personesAdreceses = personesAdreceses;
	}

}
